<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>3. Algorithms on Heterogeneous Computing</title>
    <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/</link>
    <description>Recent content in 3. Algorithms on Heterogeneous Computing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lab 2</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/lab2/</link>
      <pubDate>Sun, 12 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/lab2/</guid>
      <description>Professor: Joel Fuentes
Assistants: Daniel L칩pez, Sebasti치n Gonz치lez
Description In this laboratory you must implement a program in DPC ++ that calculates the dot product (also known as the internal product) between two vectors. The dot product is an algebraic operation that takes two sequences of numbers of equal dimension (usually in the form of vectors) and returns a single number.
Considering that there are two vectors A and B in a space (R^n) , the dot product is realized as a matrix product as follows :</description>
    </item>
    
    <item>
      <title>Parallel Patterns</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/patterns/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/patterns/</guid>
      <description>In this session we review different parallel programming patterns to implement parallel algorithms.
12-parallel_patterns.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>HPC and Biometrics (invited talk)</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/hpc/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/hpc/</guid>
      <description>Talk titled &amp;ldquo;High-Performance Computing and Biometrics&amp;rdquo; given by Dr. Ricardo Barrientos from the Universidad Cat칩lica del Maule.
Charla-UBB-HPC-Biometria.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>Algorithms and Applications</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/algorithms/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/algorithms/</guid>
      <description>In this session we review some examples of parallel algorithms and applications.
13-algorithms.pdf
#the-canvas {border: 1px solid black;direction: ltr;width: 100%;height: auto;display: none;}#paginator {display: none;text-align: center;margin-bottom: 10px;}#loadingWrapper {display: none;justify-content: center;align-items: center;width: 100%;height: 350px;}#loading {display: inline-block;width: 50px;height: 50px;border: 3px solid #d2d0d0;;border-radius: 50%;border-top-color: #383838;animation: spin 1s ease-in-out infinite;-webkit-animation: spin 1s ease-in-out infinite;}@keyframes spin {to { -webkit-transform: rotate(360deg); }}@-webkit-keyframes spin {to { -webkit-transform: rotate(360deg); }}PreviousNext&amp;nbsp; &amp;nbsp;Page:  / window.</description>
    </item>
    
    <item>
      <title>Test 3</title>
      <link>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/evaluation/</link>
      <pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.face.ubiobio.cl/~jfuentes/classes/hc/unit3/evaluation/</guid>
      <description>Heterogeneous computing   Which of the following operations does not correspond to a reduction function in DPC++? (10 points)
 maximum (max) plus (add) minimum (mul) parallel_for    Given the following code. Indicate the order in which each kernel is executed: (10 points)
queue q; auto A = q.submit([&amp;amp;])(handler&amp;amp; h){});  auto C = q.submit([&amp;amp;])(handler&amp;amp; h){  h.depends_on(A); });  auto B = q.submit([&amp;amp;])(handler&amp;amp; h){  h.depends_on(A);  h.</description>
    </item>
    
  </channel>
</rss>
